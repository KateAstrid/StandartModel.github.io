{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","Description","className","AllElements","props","generations","generation","spin","name","discoveredIn","discoveredAt","mass","charge","about","UpQuark","CharmQuark","TopQuark","DownQuark","StrangeQuark","BottomQuark","ElectronNeutrino","MuonNeutrino","TauNeutrino","Electron","Muon","Tau","Photon","Gluon","Zboson","Wboson","HiggsBoson","StandartModel","updateParticleName","viewBox","onClick","points","x","y","Legend","style","color","App","useState","particleName","setParticleName","particle","undefined","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c7779aa.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './App.css';\n\nconst Header = () => <h1>The Standard Model of Particle Physics</h1>;\n \nconst Description = (\n  <div className = 'mainText'>\n    <p>The Standard Model is a kind of periodic table of the elements for particle physics. But instead of listing the chemical elements, it lists the fundamental particles that make up the atoms that make up the chemical elements, along with any other particles that cannot be broken down into any smaller pieces.</p>\n    <p>The complete Standard Model took a long time to build. Physicist J.J. Thomson discovered the electron in 1897, and scientists at the Large Hadron Collider found the final piece of the puzzle, the Higgs boson, in 2012.</p>\n    <p>Use this interactive graphic to explore the different particles that make up the building blocks of our universe.</p>\n  </div>\n);\n\nconst AllElements = (props) => {\n\n  const generations = (props.generation) ?\n    (<div>\n      <p><strong>Generation:</strong></p>\n      <p>{props.generation}</p>\n      <p><strong>Spin:</strong></p>\n      <p>{props.spin}</p>\n    </div>):\n    (<div>\n      <div className = 'generation'>\n        <p><strong>Generation</strong></p>\n        <p>sjhdbjhsbdj</p>\n      </div>\n      <div>  \n        <p><strong>Spin:</strong></p>\n        <p>{props.spin}</p>\n      </div>\n    </div>)\n\n  return (\n    <div className = 'particleDescription'>\n      <p>{props.name}</p>\n      <div className = 'details'>\n        <div>\n          <p><strong>Discovered in:</strong></p>\n          <p>{props.discoveredIn}</p>\n          <p><strong>Discovered at:</strong></p>\n          <p>{props.discoveredAt}</p>\n        </div>\n        <div>\n          <p><strong>Mass:</strong></p>\n          <p>{props.mass}</p>\n          <p><strong>Charge:</strong></p>\n          <p>{props.charge}</p>\n        </div>\n        {generations}\n      </div>\n      <p><strong>About:</strong></p>\n      <p>{props.about}</p>\n    </div>\n  );\n}\n\nconst UpQuark = () => {\n  return (\n    <AllElements      \n      name = 'UP QUARK'\n      discoveredIn = '1968' \n      discoveredAt = 'SLAC' \n      mass = '2.3 MeV' \n      generation = 'First' \n      charge = '2/3'\n      spin = '1/2'\n      about = 'Up and down quarks make up protons and neutrons, which make up the nucleus of every atom.'/>\n  )\n};\n\nconst CharmQuark = () => {\n  return (\n    <AllElements      \n      name = 'CHARM QUARK'\n      discoveredIn = '1974' \n      discoveredAt = 'Brookhaven & SLAC' \n      mass = '1.275 GeV' \n      generation = 'Second' \n      charge = '2/3'\n      spin = '1/2'\n      about = 'In 1974, two independent research groups conducting experiments at two independent labs discovered the charm quark, the fourth quark to be found. The surprising discovery forced physicists to reconsider how the universe works at the smallest scale.'/>\n  )\n};\n\nconst TopQuark = () => {\n  return (\n    <AllElements      \n      name = 'TOP QUARK'\n      discoveredIn = '1995' \n      discoveredAt = 'Fermilab' \n      mass = '173.21 GeV' \n      generation = 'Third' \n      charge = '2/3'\n      spin = '1/2'\n      about = 'The top quark is the heaviest quark discovered so far. It has about the same weight as a gold atom. But unlike an atom, it is a fundamental, or elementary, particle; as far as we know, it is not made of smaller building blocks.'/>\n  )\n};\n\n\nconst DownQuark = () => {\n  return (\n    <AllElements      \n      name = 'DOWN QUARK'\n      discoveredIn = '1968' \n      discoveredAt = 'SLAC' \n      mass = '4.7 MeV' \n      generation = 'First' \n      charge = '-1/3'\n      spin = '1/2'\n      about = 'Nobody knows why, but a down quark is a just a little bit heavier than an up quark. If that weren’t the case, the protons inside every atom would decay and the universe would look very different.'/>\n  )\n};\n\n\nconst StrangeQuark = () => {\n  return (\n    <AllElements      \n      name = 'STRANGE QUARK'\n      discoveredIn = '1947' \n      discoveredAt = 'Manchester University' \n      mass = '95 MeV' \n      generation = 'Second' \n      charge = '-1/3'\n      spin = '1/2'\n      about = 'A new class of particles with “strange” properties were discovered in the 1960s, many years before it became clear that those properties were due to the fact that the particles all contained a new, “strange” kind of quark.'/>\n  )\n};\n\nconst BottomQuark = () => {\n  return (\n    <AllElements      \n      name = 'BOTTOM QUARK'\n      discoveredIn = '1977' \n      discoveredAt = 'Fermilab' \n      mass = '4.18 GeV' \n      generation = 'Third' \n      charge = '-1/3'\n      spin = '1/2'\n      about = 'This particle is a heavier cousin of the down and strange quarks. Its discovery confirmed that all elementary building blocks of ordinary matter come in three different versions.'/>\n  )\n};\n\nconst ElectronNeutrino = () => {\n  return (\n    <AllElements      \n      name = 'ELECTRON NEUTRINO'\n      discoveredIn = '1956' \n      discoveredAt = 'Savannah River Plant' \n      mass = '<2 eV' \n      generation = 'First' \n      charge = '0'\n      spin = '1/2'\n      about = 'Measurements and calculations in the 1920s led to the prediction of the existence of an elusive particle without electric charge, the neutrino. But it wasn’t until 1956 that scientists observed the signal of an electron neutrino interacting with other particles. Nuclear reactions in the sun and in nuclear power plants produce electron antineutrinos.'/>\n  )\n};\n\nconst MuonNeutrino = () => {\n  return (\n    <AllElements      \n      name = 'MUON NEUTRINO'\n      discoveredIn = '1962' \n      discoveredAt = 'Brookhaven' \n      mass = '<0.19 MeV' \n      generation = 'Second' \n      charge = '0'\n      spin = '1/2'\n      about = 'Neutrinos come in three flavors. The muon neutrino was first discovered in 1962. Neutrino beams from accelerators are typically made up of muon neutrinos and muon antineutrinos.'/>\n  )\n};\n\nconst TauNeutrino = () => {\n  return (\n    <AllElements      \n      name = 'TAU NEUTRINO'\n      discoveredIn = '2000' \n      discoveredAt = 'Fermilab' \n      mass = '<18.2 MeV' \n      generation = 'Third' \n      charge = '0'\n      spin = '1/2'\n      about = 'Based on theoretical models and indirect observations, scientists expected to find a third generation of neutrino. But it took until 2000 for scientists to develop the technologies to identify the particle tracks created by tau neutrino interactions.'/>\n  )\n};\n\nconst Electron = () => {\n  return (\n    <AllElements      \n      name = 'ELECTRON'\n      discoveredIn = '1897' \n      discoveredAt = 'Cavendish Laboratory' \n      mass = '0.511 MeV' \n      generation = 'First' \n      charge = '-1'\n      spin = '1/2'\n      about = 'The electron powers the world. It is the lightest particle with an electric charge and a building block of all atoms. The electron belongs to the family of charged leptons.'/>\n  )\n};\n\nconst Muon = () => {\n  return (\n    <AllElements      \n      name = 'MUON'\n      discoveredIn = '1937' \n      discoveredAt = 'Caltech & Harvard' \n      mass = '105.66 MeV' \n      generation = 'Second' \n      charge = '-1'\n      spin = '1/2'\n      about = 'The muon is a heavier version of the electron. It rains down on us as it is created in collisions of cosmic rays with the Earth’s atmosphere. When it was discovered in 1937, a physicist asked, “Who ordered that?”'/>\n  )\n};\n\nconst Tau = () => {\n  return (\n    <AllElements      \n      name = 'TAU'\n      discoveredIn = '1976' \n      discoveredAt = 'SLAC' \n      mass = '1776.82 MeV' \n      generation = 'Third' \n      charge = '-1'\n      spin = '1/2'\n      about = 'The discovery of this particle in 1976 completely surprised scientists. It was the first discovery of a particle of the so-called third generation. It is the third and heaviest of the charged leptons, heavier than both the electron and the muon.'/>\n  )\n};\n\nconst Photon = () => {\n  return (\n    <AllElements     \n      name = 'PHOTON'\n      discoveredIn = '1923' \n      discoveredAt = 'Washington University' \n      mass = '<1x10^-18 eV' \n      charge = '0'\n      spin = '1'\n      about = 'The photon is the only elementary particle visible to the human eye—but only if it has the right energy and frequency (color). It transmits the electromagnetic force between charged particles.'/>\n  )  \n};\n\nconst Gluon = () => {\n  return (\n    <AllElements     \n      name = 'GLUON'\n      discoveredIn = '1979' \n      discoveredAt = 'DESY' \n      mass = '0' \n      charge = '0'\n      spin = '1'\n      about = 'The gluon is the glue that holds together quarks to form protons, neutrons and other particles. It mediates the strong nuclear force.'/>\n  )  \n};\n\nconst Zboson = () => {\n  return (\n    <AllElements     \n      name = 'Z BOSON'\n      discoveredIn = '1983' \n      discoveredAt = 'CERN' \n      mass = '91.1876 GeV' \n      charge = '0'\n      spin = '1'\n      about = 'The Z boson is the electrically neutral cousin of the W boson and a heavy relative of the photon. Together, these particles explain the electroweak force.'/>\n  )  \n};\n\nconst Wboson = () => {\n  return (\n    <AllElements    \n      name = 'W BOSON'\n      discoveredIn = '1983' \n      discoveredAt = 'CERN' \n      mass = '80.385 GeV' \n      charge = '±1'\n      spin = '1'\n      about = 'The W boson is the only force carrier that has an electric charge. It’s essential for weak nuclear reactions: Without it, the sun would not shine.'/>\n  )\n};\n\nconst HiggsBoson = ()=> {\n  return (\n    <AllElements \n      name = 'HIGGS BOSON'\n      discoveredIn = '2012' \n      discoveredAt = 'CERN' \n      mass = '125.7 GeV' \n      charge = '0'\n      spin = '0'\n      about = 'Discovered in 2012, the Higgs boson was the last missing piece of the Standard Model puzzle. It is a different kind of force carrier from the other elementary forces, and it gives mass to quarks as well as the W and Z bosons. Whether it also gives mass to neutrinos remains to be discovered'/>\n  )\n};\n\nconst StandartModel = ({updateParticleName}) => {\n  return (\n    <div className = 'standartModel'>\n      <svg className = 'forms' viewBox = {'-10,-10,630,630'}>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('top')}>\n          <polygon className = 'quarks' points= {'301,146 301,146 301,19 301,1 280,2 260,3 222,12 185,24 151,41 160,56 224,167 229,164 244,157 260,152 277,148 295,147 296,146 295,146 295,146 301,146 301,146'}/>\n          <text className = 'letters' x = '225' y = '94'>t</text>\n          <text className = 'textUnderLetters' x = '233' y = '114'>top</text>\n        </svg>   \n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('charm')}>\n          <polygon className = 'quarks' points= {'57,158 167,222 171,217 181,204 192,191 205,180 219,170 224,167 160,56 151,41 119,62 90,88 64,117 41,149 57,158 57,158'}/>\n          <text className = 'letters' x = '125' y = '145'>c</text>\n          <text className = 'textUnderLetters' x = '123' y = '166'>charm</text>\n        </svg> \n        \n        <svg className = 'everySvg' onClick = {()=>updateParticleName('up')}>\n          <polygon className = 'quarks' points= {'41,149 24,184 12,221 3,260 2,280 1,301 19,301 19,301 147,301 147,295 148,277 152,259 157,243 165,227 167,222 57,158 41,149 41,149'}/> \n          <text className = 'letters' x = '63' y = '258'>u</text>\n          <text className = 'textUnderLetters' x = '73' y = '278'>up</text>\n        </svg>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('down')}>\n          <polygon className = 'quarks' points= {'306,147 305,147 306,147 324,148 341,152 357,157 372,164 377,167 441,56 450,41 416,24 380,12 341,3 321,2 300,1 300,19 300,147 300,147 300,147 306,147 306,147'}/>\n          <text className = 'letters' x = '332' y = '94'>d</text>\n          <text className = 'textUnderLetters' x = '337' y = '114'>down</text>\n        </svg>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('bottom')}>\n          <polygon className = 'quarks' points= {'544,158 433,222 436,227 443,243 449,259 452,277 454,295 454,301 582,301 582,301 600,301 599,280 598,260 589,221 577,184 559,149 544,158 544,158'}/>\n          <text className = 'letters' x = '499' y = '258'>b</text>\n          <text className = 'textUnderLetters' x = '494' y = '278'>bottom</text> \n        </svg>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('strange')}>\n          <polygon className = 'quarks' points= {'559,149 537,117 511,88 482,62 450,41 441,56 377,167 382,170 396,180 409,191 420,204 430,217 433,222 544,158 559,149 559,149'}/>\n          <text className = 'letters' x = '435' y = '145'>s</text>\n          <text className = 'textUnderLetters' x = '420' y = '166'>strange</text>\n        </svg>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('electrn')}>\n          <polygon className = 'leptons' points= {'559,452 577,417 589,380 598,341 599,321 600,300 582,300 582,300 454,300 454,306 452,324 449,341 443,358 436,374 433,379 544,443 559,452 559,452'}/> \n          <text className = 'lettersnu' x = '490' y = '395'>ν</text>\n          <text className = 'textUnderLetters' x = '516' y = '399'>e</text>\n          <text className = 'textUnderLetters' x = '500' y = '325'>electron</text>\n          <text className = 'textUnderLetters' x = '500' y = '340'>neutrino</text>\n        </svg>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('muonn')}>\n          <polygon className = 'leptons' points= {'544,443 433,379 430,384 420,397 409,410 396,421 382,431 377,434 441,544 450,560 482,539 511,513 537,484 559,452 544,443 544,443'}/> \n          <text className = 'lettersnu' x = '435' y = '500'>ν</text>\n          <text className = 'textUnderLetters' x = '461' y = '500'>μ</text>\n          <text className = 'textUnderLetters' x = '430' y = '425'>muon</text>\n          <text className = 'textUnderLetters' x = '410' y = '440'>neutrino</text>\n        </svg>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('taun')}>\n          <polygon className = 'leptons' points= {'300,455 300,455 300,582 300,600 321,599 341,598 379,589 416,577 450,560 441,544 377,434 372,437 357,444 341,449 324,452 306,454 305,455 306,455 306,455 300,455 300,455'}/> \n          <text className = 'lettersnu' x = '332' y = '560'>ν</text>\n          <text className = 'textUnderLetters' x = '361' y = '560'>τ</text>\n          <text className = 'textUnderLetters' x = '338' y = '480'>tau</text>\n          <text className = 'textUnderLetters' x = '315' y = '495'>neutrino</text>\n        </svg>\n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('electron')}>\n          <polygon className = 'leptons' points= {'295,455 296,455 295,454 278,452 260,449 244,444 229,437 224,434 160,544 151,560 186,577 222,589 260,598 280,599 301,600 301,582 301,455 301,455 301,455 295,455 295,455'}/> \n          <text className = 'letters' x = '225' y = '520'>e</text>\n          <text className = 'textUnderLetters' x = '210' y = '540'>electron</text>\n        </svg>    \n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('muon')}>\n          <polygon className = 'leptons' points= {'42,452 64,484 90,513 119,539 151,560 160,544 224,434 219,431 205,421 192,410 181,397 171,384 167,379 57,443 42,452 42,452'}/>    \n          <text className = 'letters' x = '120' y = '470'>μ</text>\n          <text className = 'textUnderLetters' x = '123' y = '500'>muon</text> \n        </svg> \n       \n        <svg className = 'everySvg' onClick = {()=>updateParticleName('tau')}>\n          <polygon className = 'leptons' points= {'57,443 167,379 165,374 157,358 152,341 148,324 147,306 147,300 19,300 19,300 1,300 2,321 3,341 12,380 24,417 41,452 57,443 57,443'}/> \n          <text className = 'letters' x = '68' y = '370'>τ</text>\n          <text className = 'textUnderLetters' x = '73' y = '390'>tau</text>\n        </svg>\n        \n        <svg className = 'everySvg' onClick = {()=>updateParticleName('photon')}>\n          <polygon className = 'bosons' points= {'161,301 240,301 240,295 242,284 245,274 251,266 258,258 265,251 274,246 284,242 295,240 301,240 301,162 301,162 301,147 301,147 296,147 295,147 277,148 260,152 244,157 229,164 223,167 218,170 205,180 191,191 181,204 171,218 167,222 165,228 157,243 152,259 148,277 146,295 146,301 146,301 161,301 161,301'}/> \n          <text className = 'letters' x = '220' y = '223'>γ</text>\n          <text className = 'textUnderLetters' x = '175' y = '275'>photon</text>   \n        </svg> \n       \n        <svg className = 'everySvg' onClick = {()=>updateParticleName('gluon')}>\n          <polygon className = 'bosons' points= {'454,301 454,301 454,295 452,277 449,259 443,243 436,228 433,222 430,218 420,204 409,191 396,180 382,170 377,167 372,164 357,157 341,152 324,148 306,147 305,147 300,147 300,147 300,162 300,162 300,240 306,240 317,242 327,246 336,251 343,258 350,266 355,274 359,284 360,295 361,301 439,301 454,301 454,301'}/>\n          <text className = 'letters' x = '340' y = '222'>g</text>\n          <text className = 'textUnderLetters' x = '380' y = '275'>gluon</text>   \n        </svg> \n        \n        <svg className = 'everySvg' onClick = {()=>updateParticleName('zbos')}>\n          <polygon className = 'bosons' points= {'439,301 361,301 360,307 359,317 355,327 350,336 343,344 336,351 327,356 317,359 306,361 300,361 300,440 300,440 300,455 300,455 305,455 306,455 324,453 341,450 357,444 372,438 377,434 382,432 396,422 409,410 420,398 430,384 433,379 436,374 443,358 449,341 452,325 454,307 454,301 454,301 439,301 439,301'}/>\n          <text className = 'letters' x = '340' y = '400'>z</text>\n          <text className = 'textUnderLetters' x = '399' y = '330'>Z</text> \n          <text className = 'textUnderLetters' x = '380' y = '345'>boson</text>   \n        </svg> \n        \n        <svg className = 'everySvg' onClick = {()=>updateParticleName('wbos')}>\n          <polygon className = 'bosons' points= {'146,301 146,301 146,307 148,325 152,341 157,358 165,374 167,379 171,384 181,398 191,410 205,422 218,432 223,434 229,438 244,444 260,450 277,453 295,455 296,455 301,455 301,455 301,440 301,440 301,361 295,361 284,359 274,356 265,351 258,344 251,336 245,327 242,317 240,307 240,301 161,301 146,301 146,301'}/> \n          <text className = 'letters' x = '220' y = '400'>w</text>\n          <text className = 'textUnderLetters' x = '192' y = '330'>W</text> \n          <text className = 'textUnderLetters' x = '175' y = '345'>boson</text>   \n        </svg> \n\n        <svg className = 'everySvg' onClick = {()=>updateParticleName('higgs')}> \n          <polygon className = 'higgsBoson' points= {'361,301 360,295 359,284 355,274 350,266 343,258 336,251 327,246 317,242 306,240 300,240 300,240 294,240 284,242 274,246 265,251 258,258 251,266 245,274 242,284 240,295 240,301 240,301 240,307 242,317 246,327 251,336 258,343 265,350 274,356 284,359 294,361 300,361 300,361 306,361 317,359 327,356 336,351 343,344 350,336 355,327 359,317 360,307 361,301 361,301 361,301'}/>\n          <text className = 'letters' x = '280' y = '305'>H</text>\n          <text className = 'textUnderLetters' x = '280' y = '325'>Higgs</text> \n          <text className = 'textUnderLetters' x = '280' y = '340'>boson</text> \n        </svg>\n      </svg>\n    </div>\n  );\n};\n\nconst Legend = () => {\n  return (\n    <div className = 'legend'>\n      <div>\n        <i className = 'fas fa-circle fa-2x' style = {{ color: 'hsl(16, 71%, 66%)' }} /> \n        <p className = 'quarks'>QUARKS</p>\n      </div>\n      <div>\n        <i className = 'fas fa-circle fa-2x' style = {{ color: 'hsl(45, 75%, 58%)'}} />\n        <p className = 'quarks'>LEPTONS</p> \n      </div>\n      <div>\n        <i className = 'fas fa-circle fa-2x' style = {{ color: 'hsl(8, 52%, 45%)'}} />\n        <p className = 'quarks'>BOSONS</p>\n      </div>\n      <div>\n        <i className = 'fas fa-circle fa-2x' style = {{ color: 'hsl(178, 31%, 40%'}} />\n        <p className = 'quarks'>HIGGS BOSON</p>\n      </div>\n    </div>\n  )\n}\n\n// const PARTICLE_MAPPING = {\n//   top: <TopQuark />,\n//   strange: <StrangeQuark />,\n// }\n\nconst App = () => {\n  const [particleName, setParticleName] = useState();\n  var particle = undefined;\n\n  // const particle = PARTICLE_MAPPING[particleName] || Description;\n\n  switch (particleName) {\n    case 'top':\n      particle = <TopQuark />;\n      break;\n    case 'strange':\n      particle = <StrangeQuark />;\n      break;\n    case 'down':\n      particle = <DownQuark />;\n      break;\n    case 'bottom':\n      particle = <BottomQuark />;\n      break;\n    case 'charm':\n      particle = <CharmQuark />;\n      break;\n    case 'up':\n      particle = <UpQuark />;\n      break;\n    case 'tau':\n      particle = <Tau />;\n      break;\n    case 'muon':\n      particle = <Muon />;\n      break;\n    case 'electron':\n      particle = <Electron />;\n      break;\n    case 'taun':\n      particle = <TauNeutrino />;\n      break;\n    case 'muonn':\n      particle = <MuonNeutrino />;\n      break;\n    case 'electrn':\n      particle = <ElectronNeutrino />;\n      break;\n    case 'photon':\n      particle = <Photon />;\n      break;\n    case 'gluon':\n      particle = <Gluon />;\n      break;\n    case 'wbos':\n      particle = <Wboson />;\n      break;\n    case 'zbos':\n      particle = <Zboson />;\n      break;\n    case 'higgs':\n      particle = <HiggsBoson />;\n      break;\n    default:\n      particle = Description;\n  }\n    \n  return (\n    <div className = 'containers'>\n      <StandartModel updateParticleName={setParticleName}/>\n      <div className = 'description'>\n        <Header />\n        {particle}\n        <Legend />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}